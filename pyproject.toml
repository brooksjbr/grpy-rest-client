[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=0.22", "hatch-vcs>=0.2"]


[project]
name = "grpy_rest_client"
version = "0.3.0"
description = "A package for making HTTP requests."
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
classifiers = [
  # https://pypi.org/classifiers/
  "License :: OSI Approved :: MIT License",
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
    "aiohttp >= 3.8.1",
    "asyncio >= 3.4.3",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.8.1"
]

[project.urls]
Homepage = "https://github.com/brooksjbr/grpy-rest-client"
Documentation = "https://github.com/brooksjbr/grpy-rest-client/blob/main/README.md"
Repository = "https://github.com/brooksjbr/grpy-rest-client.git"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "coverage >= 5.3",
    "pytest >= 6.1.1",
    "pytest-cov >= 4.1.0",
    "pytest-asyncio",
    "pre-commit",
    "python-semantic-release>=8.0.0",
    "build",
    "twine"
]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.semantic_release]
version_source = "commit"
branch = "main"
upload_to_pypi = false
upload_to_release = false
build_command = "python -m build"
commit_version_number = true
commit_message = "chore(release): {version} [skip ci]"
tag_format = "v{version}"
version_variables = [
    "src/grpy/__init__.py:__version__",
    "pyproject.toml:version"
]


[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false
